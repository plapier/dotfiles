{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/lapier/Sites/server/metaserver/metaserver/static/coffee/modules/dirty/streams/react/views/search"],"buffers":[{"text":"# THIS FILE SHOULD ONLY BE USED FOR THE STREAMS PROTOTYPE\n# AND IS NOT PRODUCTION-READY.\n#\n\n\"use strict\"\n\ndefine [\n  'external/react'\n  'external/underscore'\n  'modules/clean/keycode'\n], (\n  React\n  $u\n  KeyCode\n) ->\n\n  d = React.DOM\n\n  SearchInputBox = React.createFactory React.createClass\n\n    displayName: \"SearchInputBox\"\n\n    # props:\n    # - callbacks\n    #   - got_focus\n    #   - lost_focus\n    #   - search_string_change\n    #   - selection_moved\n    #   - submitted\n    # - placeholder\n    # - search_string\n    # - focused\n\n    get_input_value: ->\n      return @refs.search_input_field?.getDOMNode().value or ''\n\n    _did_key_press: (event) ->\n      switch event.keyCode\n        when KeyCode.UP\n          event.preventDefault()\n          @props.callbacks.selection_moved -1\n        when KeyCode.DOWN\n          event.preventDefault()\n          @props.callbacks.selection_moved 1\n        when KeyCode.ENTER\n          if @props.allow_submit\n            @props.callbacks.submitted()\n        when KeyCode.ESC\n          event.preventDefault()\n          @props.callbacks.lost_focus()\n\n    _did_blur: (e) ->\n      setTimeout @props.callbacks.lost_focus, 200\n\n    render: ->\n      d.div\n        className: \"form-input #{if @props.focused then 'focused-search-input' else ''}\"\n        d.input {\n          autoComplete: \"off\"\n          name: \"search_string\"\n          onBlur: @_did_blur\n          onChange: (event) => @props.callbacks.search_string_change(event.target.value)\n          onFocus: @props.callbacks.got_focus\n          onKeyDown: @_did_key_press\n          placeholder: @props.placeholder\n          ref: 'search_input_field'\n          type: 'text'\n          value: @props.search_string\n        }\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/lapier/Sites/server/metaserver/metaserver/static/coffee/modules/dirty/streams/react/views/search/search_input_box.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ecc0020d610f90b56355571bf8bfa49c5d92785b","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lapier/Sites/server/metaserver/metaserver/static/coffee/modules/dirty/streams/react/views/search/search_input_box.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/lapier/Sites/server/metaserver/metaserver/static/coffee/modules/dirty/streams/react/views/search/search_input_box.coffee","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-coffee-script","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/lapier/Sites/server/metaserver/metaserver/static/coffee/modules/dirty/streams/react/views/search/search_input_box.coffee":1430432100712},"metrics":{"sessionLength":2208},"tree-view":{"directoryExpansionStates":{"/Users/lapier/Sites/server/metaserver/metaserver/static/coffee/modules/dirty/streams/react/views/search":{"isExpanded":true,"entries":{}}},"selectedPath":"/Users/lapier/Sites/server/metaserver/metaserver/static/coffee/modules/dirty/streams/react/views/search/search_input_box.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}