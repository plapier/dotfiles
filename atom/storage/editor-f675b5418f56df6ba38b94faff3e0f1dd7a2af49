{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/lapier/.atom/packages/script"],"buffers":[{"text":"module.exports =\nclass CodeContext\n  filename: null\n  filepath: null\n  lineNumber: null\n  shebang: null\n  textSource: null\n\n  # Public: Initializes a new {CodeContext} object for the given file/line\n  #\n  # @filename   - The {String} filename of the file to execute.\n  # @filepath   - The {String} path of the file to execute.\n  # @textSource - The {String} text to under \"Selection Based\". (default: null)\n  #\n  # Returns a newly created {CodeContext} object.\n  constructor: (@filename, @filepath, @textSource = null) ->\n\n  # Public: Creates a {String} representation of the file and line number\n  #\n  # fullPath - Whether to expand the file path. (default: true)\n  #\n  # Returns the \"file colon line\" {String}.\n  fileColonLine: (fullPath = true) ->\n    if fullPath\n      fileColonLine = @filepath\n    else\n      fileColonLine = @filename\n\n    return fileColonLine unless @lineNumber\n    \"#{fileColonLine}:#{@lineNumber}\"\n\n  # Public: Retrieves the text from whatever source was given on initialization\n  #\n  # prependNewlines - Whether to prepend @lineNumber newlines (default: true)\n  #\n  # Returns the code selection {String}\n  getCode: (prependNewlines = true) ->\n    code = @textSource?.getText()\n    return code unless prependNewlines and @lineNumber\n\n    newlineCount = Number(@lineNumber)\n    newlines = Array(newlineCount).join(\"\\n\")\n    \"#{newlines}#{code}\"\n\n  # Public: Retrieves the command name from @shebang\n  #\n  # Returns the {String} name of the command or {undefined} if not applicable.\n  shebangCommand: ->\n    sections = @shebangSections()\n    return unless sections\n\n    sections[0]\n\n  # Public: Retrieves the command arguments (such as flags or arguments to\n  # /usr/bin/env) from @shebang\n  #\n  # Returns the {String} name of the command or {undefined} if not applicable.\n  shebangCommandArgs: ->\n    sections = @shebangSections()\n    return [] unless sections\n\n    sections[1..sections.length-1]\n\n  # Public: Splits the shebang string by spaces to extra the command and\n  # arguments\n  #\n  # Returns the {String} name of the command or {undefined} if not applicable.\n  shebangSections: ->\n    @shebang?.split(' ')\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/lapier/.atom/packages/script/lib/code-context.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7625f09dcfee05cf63264521c030852431dc1e9d","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lapier/.atom/packages/script/lib/code-context.coffee","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/lapier/.atom/packages/script/lib/code-context.coffee","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-coffee-script","language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"script":{"scriptOptionsViewState":""},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["scss"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/lapier/.atom/packages/script/lib/code-context.coffee":1431756939968},"keybinding-resolver":{},"metrics":{"sessionLength":42726},"tree-view":{"directoryExpansionStates":{"/Users/lapier/.atom/packages/script":{"isExpanded":true,"entries":{"examples":{"isExpanded":false,"entries":{}},"keymaps":{"isExpanded":false,"entries":{}},"lib":{"isExpanded":true,"entries":{"grammar-utils":{"isExpanded":false,"entries":{}}}},"menus":{"isExpanded":false,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}},"styles":{"isExpanded":false,"entries":{}},"utils":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/lapier/.atom/packages/script/lib/code-context.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}