{"version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/lapier/src/client-chorus/dropbox/client/ui/cocoa/choir"],"buffers":[{"id":"a0d62056c513cf1d83a63f0032fb3a6a","text":"\"\"\"\nmain object regulating the chorus user interface on mac.\n\"\"\"\nfrom __future__ import (\n    absolute_import,\n    division,\n    print_function,\n    unicode_literals,\n)\n\nimport objc\nfrom AppKit import NSImage, NSScreen\nfrom Foundation import (\n    NSBundle,\n    NSInsetRect,\n    NSIntersectionRect,\n    NSObject,\n    NSOffsetRect,\n)\n\nfrom dropbox.client.ui.cocoa.choir import EFChorusViewController\nfrom dropbox.client.ui.cocoa.choir.panel import EFChorusPanel\nfrom dropbox.client.ui.cocoa.choir.session import EFChorusSession, EFContact\nfrom dropbox.collaboration.mac.finder import FinderPlugin\n\nfrom ui.common.uikit import on_ui_thread\nfrom dropbox.trace import TRACE\n\n# pylint: disable=no-init,invalid-name,attribute-defined-outside-init,unused-argument,line-too-long,too-many-arguments\n\nclass EFChorusController(NSObject):\n    \"\"\"\n    Manages the \"Chorus\" User Interface on Mac OS X.\n    \"\"\"\n    def initWithManager_(self, pluginManager):\n        self = objc.super(EFChorusController, self).init()\n        if not self:\n            return None\n\n        # keep strong references.\n        self._pluginManager = pluginManager\n\n        # add callbacks.\n        pluginManager.add_active_window_changed_callback(self._handleWindowChanged)\n\n        # keep strong references to the currently active plugin and window.\n        self._activePlugin = None\n        self._activeWindow = None\n        self._activeState = None\n\n        # the view controller\n        self._choirBundle = choirBundle = NSBundle.bundleWithPath_(\"./choir/Build/Release/choir.bundle\")\n        self._viewController = EFChorusViewController.alloc().initWithNibName_bundle_(\n            \"EFChorusView\",\n             choirBundle, # XXX fix frozen.\n        )\n\n        # the panel which presents the view controller.\n        self._chorusPanel = EFChorusPanel.alloc().init()\n        self._chorusPanel.setContentViewController_(self._viewController)\n\n        # the model object we will be keeping up to date.\n        self._chorusSession = chorusSession = EFChorusSession.alloc().init()\n        self._chorusSession.quickContacts = self._make_fake_contacts()\n        self._viewController.setRepresentedObject_(chorusSession)\n\n        return self\n\n    def _make_fake_contacts(self):\n        item1 = EFContact.alloc().init()\n        item1.fullName = \"Philip L\"\n        item1.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/phil@2x.png\")\n        \n        item2 = EFContact.alloc().init()\n        item2.fullName = \"Max B\"\n        item2.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/max@2x.png\")\n\n        item3 = EFContact.alloc().init()\n        item3.fullName = \"Anvisha P\"\n        item3.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/anvisha@2x.png\")\n\n        item4 = EFContact.alloc().init()\n        item4.fullName = \"Colin D\"\n        item4.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/colin@2x.png\")\n    \n        return [item1, item2, item3, item4]\n\n    @objc.python_method\n    @on_ui_thread()\n    def _handle_state_changed(self, updated_state=None):\n        self._activeState = updated_state\n        self._chorusSession.updateFromState_(updated_state)\n        self._refreshPanelFromState()\n\n    @objc.python_method\n    @on_ui_thread()\n    def _handleWindowChanged(self):\n        oldActiveWindow = self._activeWindow\n        oldActivePlugin = self._activePlugin\n        newActiveWindow = self._pluginManager.active_window\n\n        # optimization: it's the same thing.\n        if oldActiveWindow == newActiveWindow:\n            return\n\n        if oldActivePlugin:\n            oldActivePlugin.remove_state_changed_callback(self._handle_state_changed)\n\n        try:\n            # we are changing, start by clearing current state.\n            self._activeWindow = None\n            self._activePlugin = None\n            self._activeState = None\n\n            # no window\n            if not newActiveWindow:\n                return\n\n            # no plugin\n            newActivePlugin = newActiveWindow.plugin()\n            if not newActivePlugin:\n                return\n\n            # wrong plugin\n            if not isinstance(newActivePlugin, FinderPlugin):\n                return\n\n            self._activeWindow = newActiveWindow\n            self._activePlugin = newActivePlugin\n\n            newActivePlugin.add_state_changed_callback(self._handle_state_changed)\n        finally:\n            self._refreshPanelFromState()\n\n    def panelFrameForBrowserFrame_(self, browserFrame):\n        if not browserFrame:\n            return None\n\n        offsetFrame = NSOffsetRect(browserFrame, 0, browserFrame.size.height - 60)\n        barFrame = NSIntersectionRect(offsetFrame, browserFrame)\n        screenHeight = NSScreen.mainScreen().frame().size.height\n        barFrame.origin.y = screenHeight - barFrame.size.height - barFrame.origin.y\n        derivedFrame = NSInsetRect(barFrame, 10, 10)\n\n        return derivedFrame\n\n    @objc.typedSelector(\"v@:\")\n    @on_ui_thread(debounce=True)\n    def _refreshPanelFromState(self):\n        # visibility\n        shouldAppear = False\n        if (self._activeWindow and self._activePlugin and self._activeState):\n            # position the panel.\n            activeState = self._activeState\n            if not activeState.browser_moving:\n                derivedFrame = self.panelFrameForBrowserFrame_(self._activeState.browser_frame)\n                if derivedFrame:\n                    # success!\n                    self._chorusPanel.setFrame_display_(derivedFrame, False)\n                    shouldAppear = True\n\n        # position\n        if shouldAppear:\n            TRACE(\"[CHORUS] showing panel\")\n            self._chorusPanel.orderFrontRegardless()\n            self._chorusPanel.setIsVisible_(True)\n        else:\n            TRACE(\"[CHORUS] hiding panel\")\n            self._chorusPanel.setIsVisible_(False)\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":125,"column":20},"end":{"row":125,"column":20}},"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":69,"undoStack":[{"type":"checkpoint","id":3,"snapshot":{"2":{"1":{"range":[[121,45],[121,45]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,45],[121,45]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[121,45],[121,45]],"newRange":[[121,45],[121,46]],"oldText":"","newText":"1"}},{"type":"change","content":{"oldRange":[[121,46],[121,46]],"newRange":[[121,46],[121,47]],"oldText":"","newText":"0"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,47],[121,47]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,47],[121,47]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[121,46],[121,47]],"newRange":[[121,46],[121,46]],"oldText":"0","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,46],[121,46]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,49],[121,49]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[121,49],[121,49]],"newRange":[[121,49],[121,50]],"oldText":"","newText":"1"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[62,0],[62,0]],"newRange":[[62,0],[65,0]],"oldText":"","newText":"        \n        \n        \n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[124,50],[124,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[23,0]],"oldText":"","newText":"from dropbox.client.ui.cocoa.choir.session import EFChorusSession, EFContact\n"}},{"type":"change","content":{"oldRange":[[23,0],[24,0]],"newRange":[[23,0],[23,0]],"oldText":"from dropbox.client.ui.cocoa.choir.session import EFChorusSession\n","newText":""}},{"type":"change","content":{"oldRange":[[62,0],[65,0]],"newRange":[[62,0],[62,0]],"oldText":"        \n        \n        \n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[118,50],[118,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[51,0],[51,0]],"newRange":[[51,0],[52,0]],"oldText":"","newText":"        self._choirBundle = choirBundle = NSBundle.bundleWithPath_(\"./choir/Build/Release/choir.bundle\")\n"}},{"type":"change","content":{"oldRange":[[54,0],[54,0]],"newRange":[[54,0],[55,0]],"oldText":"","newText":"              # XXX fix frozen.\n"}},{"type":"change","content":{"oldRange":[[55,0],[56,0]],"newRange":[[55,0],[55,0]],"oldText":"            NSBundle.bundleWithPath_(\"./choir/Build/Release/choir.bundle\")  # XXX fix frozen.\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[122,50],[122,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[54,0],[54,0]],"newRange":[[54,0],[55,0]],"oldText":"","newText":"             choirBundle, # XXX fix frozen.\n"}},{"type":"change","content":{"oldRange":[[55,0],[56,0]],"newRange":[[55,0],[55,0]],"oldText":"              # XXX fix frozen.\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[67,0],[67,0]],"newRange":[[67,0],[70,0]],"oldText":"","newText":"    def _make_fake_contacts(self):\n    \n\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[124,50],[124,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[68,0],[68,0]],"newRange":[[68,0],[69,0]],"oldText":"","newText":"        \n"}},{"type":"change","content":{"oldRange":[[69,0],[70,0]],"newRange":[[69,0],[69,0]],"oldText":"    \n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,50],[121,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[68,0],[68,0]],"newRange":[[68,0],[71,0]],"oldText":"","newText":"        item1 = EFContact.alloc().init()\n        item1.fullName = \"Philip L\"\n        item1.image = NSImage.alloc().initWithContentsOfFile_(\"./image/\")\n"}},{"type":"change","content":{"oldRange":[[71,0],[72,0]],"newRange":[[71,0],[71,0]],"oldText":"        \n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[123,50],[123,50]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,23],[121,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[70,0],[70,0]],"newRange":[[70,0],[71,0]],"oldText":"","newText":"        item1.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/phil@2x.png\")\n"}},{"type":"change","content":{"oldRange":[[71,0],[72,0]],"newRange":[[71,0],[71,0]],"oldText":"        item1.image = NSImage.alloc().initWithContentsOfFile_(\"./image/\")\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,23],[121,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,23],[121,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[71,0],[71,0]],"newRange":[[71,0],[74,0]],"oldText":"","newText":"    \n    \n        return [item1, item2]\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[124,23],[124,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[63,0],[63,0]],"newRange":[[63,0],[64,0]],"oldText":"","newText":"        self._chorusSession.quickContacts = self._make_fake_contacts()\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[122,0],[122,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[74,0],[74,0]],"newRange":[[74,0],[75,0]],"oldText":"","newText":"        return [item1]\n"}},{"type":"change","content":{"oldRange":[[75,0],[76,0]],"newRange":[[75,0],[75,0]],"oldText":"        return [item1, item2]\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[73,0],[74,0]],"newRange":[[73,0],[73,0]],"oldText":"    \n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[120,0],[120,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,0],[11,0]],"newRange":[[11,0],[12,0]],"oldText":"","newText":"from AppKit import NSImage, NSScreen\n"}},{"type":"change","content":{"oldRange":[[12,0],[13,0]],"newRange":[[12,0],[12,0]],"oldText":"from AppKit import NSScreen\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[72,0],[72,0]],"newRange":[[72,0],[82,0]],"oldText":"","newText":"        \n        item2 = EFContact.alloc().init()\n        item2.fullName = \"Max B\"\n        item2.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/phil@2x.png\")\n        item3 = EFContact.alloc().init()\n        item3.fullName = \"Anvisha D\"\n        item3.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/phil@2x.png\")\n        item4 = EFContact.alloc().init()\n        item4.fullName = \"Colin D\"\n        item4.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/phil@2x.png\")\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[131,0],[131,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[77,0],[77,0]],"newRange":[[77,0],[78,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[80,0],[80,0]],"newRange":[[80,0],[81,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[123,0],[123,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[76,0],[77,0]],"newRange":[[76,0],[76,0]],"oldText":"        item3 = EFContact.alloc().init()\n","newText":""}},{"type":"change","content":{"oldRange":[[77,0],[77,0]],"newRange":[[77,0],[78,0]],"oldText":"","newText":"item3 = EFContact.alloc().init()\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[77,0],[77,0]],"newRange":[[77,0],[78,0]],"oldText":"","newText":"        item3 = EFContact.alloc().init()\n"}},{"type":"change","content":{"oldRange":[[78,0],[79,0]],"newRange":[[78,0],[78,0]],"oldText":"item3 = EFContact.alloc().init()\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[78,0],[78,0]],"newRange":[[78,0],[79,0]],"oldText":"","newText":"        item3.fullName = \"Anvisha P\"\n"}},{"type":"change","content":{"oldRange":[[79,0],[80,0]],"newRange":[[79,0],[79,0]],"oldText":"        item3.fullName = \"Anvisha D\"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[85,0],[85,0]],"newRange":[[85,0],[86,0]],"oldText":"","newText":"        return [item1, item2, item3, item4]\n"}},{"type":"change","content":{"oldRange":[[86,0],[87,0]],"newRange":[[86,0],[86,0]],"oldText":"        return [item1]\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[121,0],[121,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[125,22],[125,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[75,0],[75,0]],"newRange":[[75,0],[76,0]],"oldText":"","newText":"        item2.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/max@2x.png\")\n"}},{"type":"change","content":{"oldRange":[[76,0],[77,0]],"newRange":[[76,0],[76,0]],"oldText":"        item2.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/phil@2x.png\")\n","newText":""}},{"type":"change","content":{"oldRange":[[79,0],[79,0]],"newRange":[[79,0],[80,0]],"oldText":"","newText":"        item3.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/anvisha@2x.png\")\n"}},{"type":"change","content":{"oldRange":[[80,0],[81,0]],"newRange":[[80,0],[80,0]],"oldText":"        item3.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/phil@2x.png\")\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[125,22],[125,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[125,22],[125,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[83,0],[83,0]],"newRange":[[83,0],[84,0]],"oldText":"","newText":"        item4.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/colin@2x.png\")\n"}},{"type":"change","content":{"oldRange":[[84,0],[85,0]],"newRange":[[84,0],[84,0]],"oldText":"        item4.image = NSImage.alloc().initWithContentsOfFile_(\"./images/chorus/phil@2x.png\")\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[125,22],[125,22]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lapier/src/client-chorus/dropbox/client/ui/cocoa/choir/controller.py","digestWhenLastPersisted":"cf973d57b97f2c822aff107f115104cefa0f8b02","preferredLineEnding":null,"nextMarkerId":32,"deserializer":"TextBuffer","version":5},{"id":"17e15c187ef45d22bfdf938c887d20d8","text":"class EFChorusContactView(NSView):\n    defaultBackgroundColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(1.0, 1.0, 1.0, 0.4).CGColor()\n    defaultBorderColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(0.0, 0.0, 0.0, 0.1).CGColor()\n    mouseDownBackgroundColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(1.0, 1.0, 1.0, 0.8).CGColor()\n    mouseDownBorderColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(0.0, 0.0, 0.0, 0.15).CGColor()\n\n    def awakeFromNib(self):\n        layer = self.layer()\n        layer.setBackgroundColor_(self.defaultBackgroundColor)\n        layer.setCornerRadius_(12.0)\n        layer.setMasksToBounds_(True)\n        layer.setBorderWidth_(1.0)\n        layer.setBorderColor_(self.defaultBorderColor)\n\n    def mouseEntered_(self, event):\n        layer.setBackgroundColor_(self.mouseDownBackgroundColor)\n        layer.setBorderColor_(self.mouseDownBorderColor)\n\n    def mouseExited_(self, event):\n        layer.setBackgroundColor_(self.defaultBackgroundColor)\n        layer.setBorderColor_(self.defaultBorderColor)\n\n    def updateTrackingAreas(self):\n        # This method is called automatically whenever the tracking areas need to be\n        # recreated, for example when window resizes.\n        if self.trackingArea:\n            self.removeTrackingArea_(self.trackingArea)\n            del self.trackingArea\n\n            tracking_options = NSTrackingMouseEnteredAndExited | NSTrackingActiveInActiveApp | NSTrackingCursorUpdate\n\n        self.trackingArea = NSTrackingArea.alloc().initWithRect_options_owner_userInfo_(\n            self.frame(),     # rect\n            tracking_options, # options\n            self,             # owner\n            None)             # userInfo\n\n        self.addTrackingArea_(self.trackingArea)\n\n\n    def mouseDown_(self, event):\n        layer= self.layer()\n\n        layer.setBackgroundColor_(self.mouseDownBackgroundColor)\n        layer.setBorderColor_(self.mouseDownBorderColor)\n\n#        objc.super(EFChorusContactView, self).mouseDown_(event)\n#\n#        layer.setBackgroundColor_(self.defaultBackgroundColor)\n#        layer.setBorderColor_(self.defaultBorderColor)\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"56":{"range":{"start":{"row":49,"column":54},"end":{"row":49,"column":55}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"57":{"range":{"start":{"row":49,"column":30},"end":{"row":49,"column":31}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":4,"column":0},"end":{"row":4,"column":106}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"clip":"forward","preserveFolds":true},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":10,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[32,55]],"oldText":"","newText":"class EFChorusContactView(NSView):\n    defaultBackgroundColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(1.0, 1.0, 1.0, 0.4).CGColor()\n    defaultBorderColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(0.0, 0.0, 0.0, 0.1).CGColor()\n    mouseDownBackgroundColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(1.0, 1.0, 1.0, 0.75).CGColor()\n    mouseDownBorderColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(0.0, 0.0, 0.0, 0.15).CGColor()\n\n    def awakeFromNib(self):\n        layer = self.layer()\n        layer.setBackgroundColor_(self.defaultBackgroundColor)\n        layer.setCornerRadius_(12.0)\n        layer.setMasksToBounds_(True)\n        layer.setBorderWidth_(1.0)\n        layer.setBorderColor_(self.defaultBorderColor)\n\n    def mouseEntered_(self, event):\n        layer.setBackgroundColor_(self.mouseDownBackgroundColor)\n        layer.setBorderColor_(self.mouseDownBorderColor)\n\n    def mouseExited_(self, event):\n        layer.setBackgroundColor_(self.defaultBackgroundColor)\n        layer.setBorderColor_(self.defaultBorderColor)\n    \n\n    def mouseDown_(self, event):\n        layer= self.layer()\n        \n        layer.setBackgroundColor_(self.mouseDownBackgroundColor)\n        layer.setBorderColor_(self.mouseDownBorderColor)\n        \n#        objc.super(EFChorusContactView, self).mouseDown_(event)\n#\n#        layer.setBackgroundColor_(self.defaultBackgroundColor)\n#        layer.setBorderColor_(self.defaultBorderColor)"}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[0,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[32,55],[32,55]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,33],[11,33]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[28,0],[28,8]],"newRange":[[28,0],[28,0]],"oldText":"        ","newText":""}},{"type":"change","content":{"oldRange":[[25,0],[25,8]],"newRange":[[25,0],[25,0]],"oldText":"        ","newText":""}},{"type":"change","content":{"oldRange":[[21,0],[21,4]],"newRange":[[21,0],[21,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[32,55],[32,55]],"newRange":[[32,55],[33,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,33],[11,33]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[33,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[33,0]],"newRange":[[0,0],[49,55]],"oldText":"class EFChorusContactView(NSView):\n    defaultBackgroundColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(1.0, 1.0, 1.0, 0.4).CGColor()\n    defaultBorderColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(0.0, 0.0, 0.0, 0.1).CGColor()\n    mouseDownBackgroundColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(1.0, 1.0, 1.0, 0.75).CGColor()\n    mouseDownBorderColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(0.0, 0.0, 0.0, 0.15).CGColor()\n\n    def awakeFromNib(self):\n        layer = self.layer()\n        layer.setBackgroundColor_(self.defaultBackgroundColor)\n        layer.setCornerRadius_(12.0)\n        layer.setMasksToBounds_(True)\n        layer.setBorderWidth_(1.0)\n        layer.setBorderColor_(self.defaultBorderColor)\n\n    def mouseEntered_(self, event):\n        layer.setBackgroundColor_(self.mouseDownBackgroundColor)\n        layer.setBorderColor_(self.mouseDownBorderColor)\n\n    def mouseExited_(self, event):\n        layer.setBackgroundColor_(self.defaultBackgroundColor)\n        layer.setBorderColor_(self.defaultBorderColor)\n\n\n    def mouseDown_(self, event):\n        layer= self.layer()\n\n        layer.setBackgroundColor_(self.mouseDownBackgroundColor)\n        layer.setBorderColor_(self.mouseDownBorderColor)\n\n#        objc.super(EFChorusContactView, self).mouseDown_(event)\n#\n#        layer.setBackgroundColor_(self.defaultBackgroundColor)\n#        layer.setBorderColor_(self.defaultBorderColor)\n","newText":"class EFChorusContactView(NSView):\n    defaultBackgroundColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(1.0, 1.0, 1.0, 0.4).CGColor()\n    defaultBorderColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(0.0, 0.0, 0.0, 0.1).CGColor()\n    mouseDownBackgroundColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(1.0, 1.0, 1.0, 0.8).CGColor()\n    mouseDownBorderColor = NSColor.colorWithCalibratedRed_green_blue_alpha_(0.0, 0.0, 0.0, 0.15).CGColor()\n    \n    def awakeFromNib(self):\n        layer = self.layer()\n        layer.setBackgroundColor_(self.defaultBackgroundColor)\n        layer.setCornerRadius_(12.0)\n        layer.setMasksToBounds_(True)\n        layer.setBorderWidth_(1.0)\n        layer.setBorderColor_(self.defaultBorderColor)\n    \n    def mouseEntered_(self, event):\n        layer.setBackgroundColor_(self.mouseDownBackgroundColor)\n        layer.setBorderColor_(self.mouseDownBorderColor)\n    \n    def mouseExited_(self, event):\n        layer.setBackgroundColor_(self.defaultBackgroundColor)\n        layer.setBorderColor_(self.defaultBorderColor)\n\n    def updateTrackingAreas(self):\n        # This method is called automatically whenever the tracking areas need to be\n        # recreated, for example when window resizes.\n        if self.trackingArea:\n            self.removeTrackingArea_(self.trackingArea)\n            del self.trackingArea\n    \n            tracking_options = NSTrackingMouseEnteredAndExited | NSTrackingActiveInActiveApp | NSTrackingCursorUpdate\n        \n        self.trackingArea = NSTrackingArea.alloc().initWithRect_options_owner_userInfo_(\n            self.frame(),     # rect\n            tracking_options, # options\n            self,             # owner\n            None)             # userInfo\n                                                                                          \n        self.addTrackingArea_(self.trackingArea)\n\n    \n    def mouseDown_(self, event):\n        layer= self.layer()\n        \n        layer.setBackgroundColor_(self.mouseDownBackgroundColor)\n        layer.setBorderColor_(self.mouseDownBorderColor)\n\n#        objc.super(EFChorusContactView, self).mouseDown_(event)\n#\n#        layer.setBackgroundColor_(self.defaultBackgroundColor)\n#        layer.setBorderColor_(self.defaultBorderColor)"}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[0,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[49,55],[49,55]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[49,54],[49,54]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,0]],"oldText":"        ","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,4]],"newRange":[[39,0],[39,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[36,0],[36,90]],"newRange":[[36,0],[36,0]],"oldText":"                                                                                          ","newText":""}},{"type":"change","content":{"oldRange":[[30,0],[30,8]],"newRange":[[30,0],[30,0]],"oldText":"        ","newText":""}},{"type":"change","content":{"oldRange":[[28,0],[28,4]],"newRange":[[28,0],[28,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[17,0],[17,4]],"newRange":[[17,0],[17,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[13,0],[13,4]],"newRange":[[13,0],[13,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[5,0],[5,4]],"newRange":[[5,0],[5,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[49,55],[49,55]],"newRange":[[49,55],[50,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[49,54],[49,54]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/lapier/Downloads/contacts.txt","digestWhenLastPersisted":"030235edca9aba042139b71659d626e1e55c2df8","preferredLineEnding":"\n","nextMarkerId":64,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":113,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/lapier/src/client-chorus/dropbox/client/ui/cocoa/choir/controller.py","bufferId":"a0d62056c513cf1d83a63f0032fb3a6a","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/lapier/Downloads/contacts.txt","bufferId":"17e15c187ef45d22bfdf938c887d20d8","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/lapier/Downloads/contacts.txt","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-python","language-text","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"linter":{"scope":"File"},"find-and-replace":{"findOptions":{"findPattern":"panelframe","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["panelframe"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/lapier/src/client-chorus/dropbox/client/ui/cocoa/choir/controller.py":1454052091001,"/Users/lapier/Downloads/contacts.txt":1454092120082},"keybinding-resolver":{},"metrics":{"sessionLength":495349},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/lapier/src/client-chorus/dropbox/client/ui/cocoa/choir":{"isExpanded":true,"entries":{}}},"selectedPath":"/Users/lapier/src/client-chorus/dropbox/client/ui/cocoa/choir/controller.py","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}